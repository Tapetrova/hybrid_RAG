#!/usr/bin/env python3
"""
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ Efficiency Score
"""

print('üìä –ö–ê–ö –†–ê–°–°–ß–ò–¢–´–í–ê–ï–¢–°–Ø EFFICIENCY SCORE:')
print('='*60)
print()
print('–§–û–†–ú–£–õ–ê: Efficiency = Support Rate / (Cost √ó 100)')
print()
print('–ì–¥–µ:')
print('  ‚Ä¢ Support Rate = % –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö (–Ω–µ-–≥–∞–ª–ª—é—Ü–∏–Ω–∏—Ä—É—é—â–∏—Ö) –æ—Ç–≤–µ—Ç–æ–≤')
print('  ‚Ä¢ Cost = —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –≤–æ–ø—Ä–æ—Å –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö')
print('  ‚Ä¢ √ó100 = –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —á—Ç–µ–Ω–∏—è')
print()
print('–õ–û–ì–ò–ö–ê: –ß–µ–º –≤—ã—à–µ –∫–∞—á–µ—Å—Ç–≤–æ (Support) –∏ –Ω–∏–∂–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å (Cost),')
print('        —Ç–µ–º –≤—ã—à–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!')
print()
print('-'*60)
print('–ü–†–ò–ú–ï–†–´ –†–ê–°–ß–ï–¢–ê:')
print()

# –î–∞–Ω–Ω—ã–µ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
methods = {
    'base_llm': {
        'support_rate': 0.377,  # 37.7%
        'cost': 0.00008,
        'hr': 0.623  # 62.3%
    },
    'vector_rag': {
        'support_rate': 0.823,  # 82.3%
        'cost': 0.00108,
        'hr': 0.176  # 17.6%
    },
    'graph_rag': {
        'support_rate': 0.728,  # 72.8%
        'cost': 0.00116,
        'hr': 0.272  # 27.2%
    },
    'hybrid_ahs': {
        'support_rate': 0.790,  # 79.0%
        'cost': 0.00217,
        'hr': 0.210  # 21.0%
    }
}

for method, data in methods.items():
    efficiency = data['support_rate'] / (data['cost'] * 100)
    
    print(f'{method.upper()}:')
    print(f'  Support Rate: {data["support_rate"]*100:.1f}%')
    print(f'  Cost per Q: ${data["cost"]:.5f}')
    print(f'  Efficiency = {data["support_rate"]:.3f} / ({data["cost"]:.5f} √ó 100)')
    print(f'  Efficiency = {data["support_rate"]:.3f} / {data["cost"]*100:.3f}')
    print(f'  Efficiency = {efficiency:.2f}')
    print()

print('-'*60)
print('–ò–ù–¢–ï–†–ü–†–ï–¢–ê–¶–ò–Ø:')
print()
print('‚Ä¢ base_llm: –í—ã—Å–æ–∫–∏–π score (45.86) –∏–∑-–∑–∞ –Ω–∏–∑–∫–æ–π —Ü–µ–Ω—ã,')
print('            –ù–û –∫–∞—á–µ—Å—Ç–≤–æ —É–∂–∞—Å–Ω–æ–µ (HR=62.3%)')
print()
print('‚Ä¢ vector_rag: Score=7.63 - –õ–£–ß–®–ò–ô —Ä–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å')
print('              (—Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–∞ —Ä–∞–∑—É–º–Ω—ã–µ –¥–µ–Ω—å–≥–∏)')
print()
print('‚Ä¢ hybrid_ahs: Score=3.63 - –≤ 2x –¥–æ—Ä–æ–∂–µ vector_rag,')
print('              –Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—Å–µ–≥–æ –Ω–∞ 3-4%')
print()
print('‚ö†Ô∏è –í–ê–ñ–ù–û: Efficiency Score - —ç—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –º–µ—Ç—Ä–∏–∫–∞!')
print('   –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –∏ –¥—Ä—É–≥–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã:')
print('   - –ö—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å –æ—à–∏–±–æ–∫ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞')
print('   - –û–±—ä–µ–º –∑–∞–ø—Ä–æ—Å–æ–≤')
print('   - SLA –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞')
print('   - –°–ø–µ—Ü–∏—Ñ–∏–∫—É —Ç–∏–ø–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤')
print()
print('='*60)
print('–ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –ú–ï–¢–†–ò–ö–ò:')
print()

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –º–µ—Ç—Ä–∏–∫–∞ 1: Value Score (—É—á–∏—Ç—ã–≤–∞–µ—Ç —Å–Ω–∏–∂–µ–Ω–∏–µ HR)
print('1. VALUE SCORE = (1 - HR) / Cost')
print('   (—á–µ–º –º–µ–Ω—å—à–µ –≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–π –∏ –Ω–∏–∂–µ —Ü–µ–Ω–∞, —Ç–µ–º –ª—É—á—à–µ)')
print()
for method, data in methods.items():
    value = (1 - data['hr']) / data['cost']
    print(f'   {method:12}: {value:,.0f}')

print()
print('2. ROI vs BASE = –°–Ω–∏–∂–µ–Ω–∏–µ HR / –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å')
print('   (–Ω–∞ —Å–∫–æ–ª—å–∫–æ % —Å–Ω–∏–∂–∞–µ—Ç—Å—è HR –Ω–∞ –∫–∞–∂–¥—ã–π –¥–æ–ª–ª–∞—Ä)')
print()

base_hr = methods['base_llm']['hr']
base_cost = methods['base_llm']['cost']

for method, data in methods.items():
    if method != 'base_llm':
        hr_reduction = (base_hr - data['hr']) / base_hr * 100
        extra_cost = (data['cost'] - base_cost) * 1000  # –Ω–∞ 1000 –≤–æ–ø—Ä–æ—Å–æ–≤
        if extra_cost > 0:
            roi = hr_reduction / extra_cost
            print(f'   {method:12}: {roi:.1f}% —Å–Ω–∏–∂–µ–Ω–∏—è HR –Ω–∞ $1')

print()
print('3. –ö–†–ò–¢–ï–†–ò–ô –î–õ–Ø –í–´–ë–û–†–ê:')
print()
print('   –ï—Å–ª–∏ –≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏—è —Å—Ç–æ–∏—Ç –≤–∞–º $X —É–±—ã—Ç–∫–∞:')
print('   - –ü—Ä–∏ X < $0.01: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ base_llm')
print('   - –ü—Ä–∏ X = $0.01-0.10: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ vector_rag')
print('   - –ü—Ä–∏ X > $0.10: —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ hybrid_ahs')
print()
print('   –ü—Ä–∏–º–µ—Ä: –ï—Å–ª–∏ –æ–¥–Ω–∞ –≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏—è = –ø–æ—Ç–µ—Ä—è –∫–ª–∏–µ–Ω—Ç–∞ ($100),')
print('           —Ç–æ hybrid_ahs –æ–∫—É–ø–∏—Ç—Å—è!')